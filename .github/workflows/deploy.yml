name: Deploy to server

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  SERVER: ${{ vars.SERVER }}
  WEB_ROOT: ${{ vars.WEB_ROOT }}
  HOST_PUBKEY: ${{ vars.HOST_PUBKEY }}
  SSH_KEY: ${{ secrets.SSH_KEY }}
  USERNAME: ${{ vars.USERNAME }}
  DB_TYPE: ${{ vars.DB_TYPE }}
  DB_DATABASE: ${{ vars.DB_DATABASE }}
  DB_HOST: ${{ vars.DB_HOST }}
  DB_USER: ${{ vars.DB_USER }}
  DB_PASS: ${{ vars.DB_PASS }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, prod]
      fail-fast: true
    environment: ${{ matrix.environment }}
    steps:
      - name: Checkout workflow repo
        uses: actions/checkout@v3

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "$HOST_PUBKEY" >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        # If dev, only run on pull requests. If prod, only run on push to main
        if: (
            matrix.environment == 'dev' && github.event_name == 'pull_request'
          )
          ||
          (
            matrix.environment == 'prod' && github.event_name == 'push' && github.ref == 'refs/heads/main'
          )
        run: |
          # create branch name with only alphanumeric characters and hyphens
          if [ "${{ matrix.environment }}" == "dev" ]; then
            export DB_SUFFIX="__dev"
          fi

          COMMANDS=$(cat <<'ENDSSH'
            cd webroots/${{ vars.WEB_ROOT }}
            git fetch
            git reset --hard origin/main
            cd server
            composer install --no-dev --optimize-autoloader
            php vendor/robmorgan/phinx/bin/phinx migrate -n -c config/phinx.php -e ${{ matrix.environment }}
            if [ {{ matrix.environment }} == "dev" ]; then
              php vendor/robmorgan/phinx/bin/phinx seed:run -n -c config/phinx.php -e ${{ matrix.environment }}
            fi
          ENDSSH
          )
          echo "$COMMANDS"
          ssh $USERNAME@$SERVER -i ~/.ssh/id_rsa "$COMMANDS"
